from sklearn.model_selection import train_test_splittrain_data, test_data, train_target, test_target = train_test_split(data,\ target, test_size=0.2, train_size=0.8 ,random_state=1234)
from sklearn.tree import DecisionTreeClassifierclf = DecisionTreeClassifier(criterion='entropy', max_depth=4, class_weight=None, random_state=1234 ) clf.fit(train_data,train_target)
import sklearn.metrics as metrics
print(metrics.classification_report(test_target, clf.predict(test_data)))
clf.set_params(**{'class_weight':{0:1,1:5}})//调整被引用的权重为未被引用的五倍
clf.fit(train_data,train_target)
print(metrics.classification_report(test_target, clf.predict(test_data)))
list(zip(data.columns, clf.feature_importances_))
import pydotplusfrom IPython.display import Image import sklearn.tree as treedot_data = tree.export_graphviz(clf, out_file=None, feature_names=data.columns, class_names=['0','1'], filled=True) graph = pydotplus.graph_from_dot_data(dot_data) Image(graph.create_png())
